#１０．３　用相对名称来导入包中的子模块

# 10.3.1 问题
# 我们将代码组织成了一个包，想从其中一个子模块中导入另一个子模块，但是又不希望在import 语句中硬编码包的名称


# 10.3.2 解决方案
# 要在软件包的子模块中导入同一个包中的其他的子模块，请使用相对名称来导入。例如，假设是如下的组织结构

# 如果模块mypackage.A.spam希望导入同一个目录中的模块grok，

# mypackage/A/spam.py


from . import grok

# 如果模块　mypackage.A.spam 希望导入位于不同目录中的模块B.bar,可以使用下面的immport 来完成

#  mypackage/A/spam.py

from ..B import bar

# 上面都是相对与spam.py的文件位置来控制的，而且其中没有包含最顶层包的名称

# １０．３．３　讨论
# 在包的内部，要在其中一个子模块中导入同一个包中其他额子模块，既可以通过给出完整的绝对名称，也可以通过上面的采用

# mypackage/A/spam.py
# 绝对路径　　　from mypackage.A import grok
# 绝对路径　　　from mypackage.A import grok

# 利用句点的组合形式进入一个不是Pｙthon包的目录会使得导入出现错误
#  应该要提到的是相对导入只有在特定的条件下才起作用。即，模块必须位于一个合适的包中才可以。特别是，位于脚本顶层目录的模块不能使用相对导入。
#此外，如果包的某个部分是一脚本的形式执行的，这种清晰下也不能使用相对导入。
# 另一方面，如果使用-m选项来执行上妈的脚本，那么相对于就可以正常工作了