# ７．２　python何时执行装饰器
# 装饰器的一个关键特性是，它们在被装饰器的函数定义之后立刻执行。这通常在导入是(即python加载模块时),
# 示例７．２　registration.py模块
# 注意到，regi在模块中其他函数运行之前运行了(两次),调用regi是，传递给它的参数是被装饰的函数
# 加载模块后，reg中有两个被装饰函数的引用：f1,f2。这两个函数以及f2,只在main明确调用它们时才执行
# 这个例子，要强调函数装饰器在导入模块时立即执行，而被装饰的函数只在明确调用时运行。这突出了python程序员所说的导入时和运行时的区别


# 考虑到装饰器在真实代码中的常用方式，
# １．装饰器函数与被装饰的函数在同一个模块中定义。实际情况是，装饰器通常在一个模块中定义，然后应用到其他模块中的函数上
# ２．regi装饰器返回的函数与通过参数传入的相同。实际上，大多数装饰器会在内部定义一个函数，然后将其返回


# register装饰器原封不动地返回被装饰的函数，但是这种技术并非没有用处。很多python web框架使用这样的装饰器把函数添加到某种中央注册处。
# 流入把url模式映射到生成http响应的函数上的注册处。这种注册装饰器可能会也可能不会修改被装饰的函数

f_list = []

def add_3(func):
    def f():
        return 3

    return func



@add_3
def add(n):
    n = n + 6
    return n

print(add(9))


